<Project Sdk="Microsoft.Quantum.Sdk/0.15.2103133969">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Quantum.Chemistry" Version="0.15.2103133969" />
  </ItemGroup>
    
  <PropertyGroup>
    <CSharpGeneration>false</CSharpGeneration>
    <QscExe>dotnet $(MSBuildThisFileDirectory)../../../src/QsCompiler/CommandLineTool/bin/$(Configuration)/netcoreapp3.1/qsc.dll</QscExe>
  </PropertyGroup>
    
  <ItemGroup>
    <UpToDateCheckInput Include="@(None)" />
    <None Include="$(QirOutputPath)**" />
    <Compile Remove="Main.cs" />
  </ItemGroup>
    
  <ItemGroup>
    <ProjectReference Include="..\..\..\src\QsCompiler\CommandLineTool\CommandLineTool.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="..\..\..\src\QsCompiler\QirGeneration\QirGeneration.csproj" IsQscReference="true" />
  </ItemGroup>

  <!--
  Providing these targets is usually not needed;
  we just do that here to make sure the Q# compilation is executed even when the Q# project did not change,
  and files with the generated QIR are deleted when the project is cleaned
  despite that we added them in a way that displays them as part of the project.
  -->

  <Target Name="CleanQir" AfterTargets="QSharpClean" DependsOnTargets="Restore">
    <ItemGroup>
      <_QirFilesToClean Include="$(QirOutputPath)**" />
      <None Remove="@(_QirFilesToClean)" />
    </ItemGroup>
    <Delete Files="@(_QirFilesToClean)" />
    <RemoveDir Directories="$(QirOutputPath)" />
  </Target>

  <Target Name="BeforeQSharpCompile" DependsOnTargets="QSharpClean">
    <Message Text="Removed files from prior compilation." Importance="High" />
  </Target>

  <Target Name="BeforeCSharpCompile">
    <ItemGroup>
      <Compile Include="Main.cs">
        <Visible>false</Visible>
      </Compile>
    </ItemGroup>
  </Target>

  <!--
  We provide a target that builds an executable in the qir folder.
  -->
    
  <Target Name="BuildExecutable" Condition="'$(DesignTimeBuild)' != 'true'" AfterTargets="QSharpCompile;CoreBuild">
    <PropertyGroup>
      <SimulatorRuntime>$(MSBuildThisFileDirectory)Microsoft.Quantum.Simulator.Runtime.dll</SimulatorRuntime>
      <QirRuntimeLibs>$(MSBuildThisFileDirectory)/../../../../QsSimulation/src/Qir/Runtime/build/$(Configuration)/bin</QirRuntimeLibs>
      <QirRuntimeHeaders>$(MSBuildThisFileDirectory)/../../../../QsSimulation/src/Qir/Runtime/public</QirRuntimeHeaders>
      <ClangCommand>clang++ -o $(QirOutputPath)$(MSBuildProjectName).exe $(QirOutputPath)$(PathCompatibleAssemblyName).ll Main.cpp -I$(QirOutputPath) -L$(QirOutputPath) -lMicrosoft.Quantum.Qir.Runtime -lMicrosoft.Quantum.Qir.QSharp.Core -lMicrosoft.Quantum.Qir.QSharp.Foundation</ClangCommand>
    </PropertyGroup>
    <ItemGroup>
      <_QirRuntimeLibFiles Include="$(QirRuntimeLibs)/**/*.*" Exclude="$(QirRuntimeLibs)/**/*.exe" />
      <_QirRuntimeHeaderFiles Include="$(QirRuntimeHeaders)/**/*.hpp" />
    </ItemGroup>
    <Copy SourceFiles="$(SimulatorRuntime)" DestinationFolder="$(QirOutputPath)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(_QirRuntimeLibFiles)" DestinationFolder="$(QirOutputPath)\%(RecursiveDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(_QirRuntimeHeaderFiles)" DestinationFolder="$(QirOutputPath)\%(RecursiveDir)" SkipUnchangedFiles="true" />
    <Exec Command="$(ClangCommand)" IgnoreExitCode="false" />
  </Target>

</Project>
