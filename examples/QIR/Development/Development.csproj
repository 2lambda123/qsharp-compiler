<Project Sdk="Microsoft.Quantum.Sdk/0.24.201332">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <IncludeQSharpCorePackages>false</IncludeQSharpCorePackages>
    <BuildOutputPath>$(MSBuildThisFileDirectory)build</BuildOutputPath>
    <ExecutablePath>$(BuildOutputPath)\$(MSBuildProjectName)</ExecutablePath>
    <AdditionalQscArguments>--runtime-override AdaptiveExecution</AdditionalQscArguments>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Quantum.LlvmBindings.Native" Version="13.0.0-CI-20220129-005156" PrivateAssets="All" GeneratePathProperty="true"/>
    <PackageReference Include="Microsoft.Quantum.Qir.Runtime" Version="0.24.201332-alpha" GeneratePathProperty="true" />
  </ItemGroup>

  <PropertyGroup>
    <CSharpGeneration>false</CSharpGeneration>
    <QscExe>dotnet $(MSBuildThisFileDirectory)../../../src/QsCompiler/CommandLineTool/bin/$(Configuration)/net6.0/qsc.dll</QscExe>
    <_QscCommandPredefinedAssemblyProperties>$(_QscCommandPredefinedAssemblyProperties) QirOutputPath:"qir"</_QscCommandPredefinedAssemblyProperties>
    <LlvmLibsPath>$(PkgMicrosoft_Quantum_LlvmBindings_Native)</LlvmLibsPath>
  </PropertyGroup>

  <ItemGroup>
    <UpToDateCheckInput Include="@(None)" />
    <None Include="$(QirOutputPath)**" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\src\QsCompiler\CommandLineTool\CommandLineTool.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="..\..\..\src\QsCompiler\QirGeneration\QirGeneration.csproj" IsQscReference="true" />
  </ItemGroup>

  <!--
  Providing these targets is usually not needed;
  we just do that here to make sure the Q# compilation is executed even when the Q# project did not change,
  and files with the generated QIR are deleted when the project is cleaned
  despite that we added them in a way that displays them as part of the project.
  The C# driver is usually also provided by the Sdk, but we generate it manually for this project
  since we disabled the usual mechanism for execution via QIR due to using the source code version
  of the compiler and QIR generation.
  -->

  <Target Name="CleanQir" AfterTargets="QSharpClean" DependsOnTargets="Restore">
    <ItemGroup>
      <_QirFilesToClean Include="$(QirOutputPath)**" />
      <_QirFilesToClean Include="$(BuildOutputPath)\**" />
      <None Remove="@(_QirFilesToClean)" />
    </ItemGroup>
    <Delete Files="@(_QirFilesToClean)" />
    <RemoveDir Directories="$(QirOutputPath)" />
    <RemoveDir Directories="$(BuildOutputPath)" />
  </Target>

  <Target Name="BeforeQSharpCompile" DependsOnTargets="QSharpClean">
    <Message Text="Removed files from prior compilation." Importance="High" />
  </Target>

  <Target Name="BeforeCSharpCompile">
    <PropertyGroup>
      <CsEntryPoint>
        namespace Microsoft.Quantum.Sdk.Tools {
          public static class DefaultEntryPoint {
            private static int Main(string[] args) {
              QsCompiler.ProcessRunner.Run(@"$(ExecutablePath)", "", out var ostream, out var errstream, out int exitCode, out var ex)%3B
              if (ex != null) throw ex%3B
              System.Console.WriteLine(ostream)%3B
              System.Console.Error.WriteLine(errstream)%3B
              return exitCode%3B
            }
          }
        }
      </CsEntryPoint>
    </PropertyGroup>
    <WriteLinesToFile File="$(GeneratedFilesOutputPath)Main.cs" Overwrite="true" Lines="$(CsEntryPoint)" />
    <ItemGroup>
      <Compile Include="$(GeneratedFilesOutputPath)Main.cs">
        <Visible>false</Visible>
      </Compile>
      <_QirOutputFiles Include="$(QirOutputPath)**" />
    </ItemGroup>
    <Error Condition="!Exists($(QirOutputPath))" Text="QIR output folder was not created." />
    <Error Condition="@(_QirOutputFiles->Count()) &lt; 1" Text="QIR output files (.ll) were not created." />
  </Target>

</Project>
