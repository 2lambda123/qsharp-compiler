/* Keep all the custom logic defines and includes in one place */
#pragma once

#include <stdint.h>
#include "ARMCM4_FP.h"
#include "SEGGER_RTT.h"
#include "synopsys_gpio.h"
// These headers are autogenerated and live in blocks/dig/verif/src/regs/headers
#include "fkb_dig_acl_csr.h"
#include "fkb_dig_csi_csr.h"
#include "fkb_dig_rcl_csr.h"
#include "fkb_dig_srb_csr.h"
#include "mkb_dig_csi_csr.h"

// Memory mapping for custom reg blocks
#define SRB_BASE ((uint32_t)0x50000000)
#define CSI_BASE ((uint32_t)0x44000000)
#define ACL_BASE ((uint32_t)0x42000000)
#define RCL_BASE ((uint32_t)0x40000000)

// grab handles to the register blocks
#define ACL_REGS ((Fkb_dig_acl_csr *)ACL_BASE)
#define CSI_REGS ((Fkb_dig_csi_csr *)CSI_BASE)
#define SRB_REGS ((Fkb_dig_srb_csr *)SRB_BASE)
#define RCL_REGS ((Fkb_dig_rcl_csr *)RCL_BASE)

// Define ordering for custom interrupts
#define CSI_IRQn CM4IKMCU_IRQ01_IRQn
#define ACL_IRQn CM4IKMCU_IRQ02_IRQn

#define ASSERT(x)                                                              \
    do                                                                         \
    {                                                                          \
        if (!(x))                                                              \
        {                                                                      \
            SEGGER_RTT_printf(0, "ASSERT FAILED %s:%d\n", __FILE__, __LINE__); \
            exit(-1);                                                          \
        }                                                                      \
    } while (0)

#define xb_enable_clock_gating() \
    SRB_REGS->rClksrc =          \
        FKB_DIG_SRB_CSR_RCLKSRC_FKBCGE_MODIFY(SRB_REGS->rClksrc, 1)
